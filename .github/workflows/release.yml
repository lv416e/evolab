name: Release

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:
    inputs:
      version:
        description: "Release version (e.g., v1.0.0)"
        required: true
        type: string

jobs:
  build-release:
    name: Build Release
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4

      - name: Install dependencies (Linux)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y cmake ninja-build g++-12 libtbb-dev

      - name: Install dependencies (macOS)
        if: runner.os == 'macOS'
        run: |
          brew install cmake ninja tbb

      - name: Install dependencies (Windows)
        if: runner.os == 'Windows'
        run: |
          choco install ninja

      - name: Configure CMake (Linux)
        if: runner.os == 'Linux'
        run: |
          cmake -B build -G Ninja \
            -DCMAKE_BUILD_TYPE=Release \
            -DCMAKE_C_COMPILER=gcc-12 \
            -DCMAKE_CXX_COMPILER=g++-12 \
            -DCMAKE_INTERPROCEDURAL_OPTIMIZATION=ON \
            -DEVOLAB_BUILD_TESTS=OFF \
            -DEVOLAB_BUILD_BENCHMARKS=ON \
            -DEVOLAB_USE_TBB=ON

      - name: Configure CMake (macOS)
        if: runner.os == 'macOS'
        run: |
          cmake -B build -G Ninja \
            -DCMAKE_BUILD_TYPE=Release \
            -DCMAKE_C_COMPILER=clang \
            -DCMAKE_CXX_COMPILER=clang++ \
            -DCMAKE_INTERPROCEDURAL_OPTIMIZATION=ON \
            -DEVOLAB_BUILD_TESTS=OFF \
            -DEVOLAB_BUILD_BENCHMARKS=ON \
            -DEVOLAB_USE_TBB=ON

      - name: Configure CMake (Windows)
        if: runner.os == 'Windows'
        run: |
          cmake -B build -G "Visual Studio 17 2022" -A x64 `
            -DCMAKE_BUILD_TYPE=Release `
            -DCMAKE_INTERPROCEDURAL_OPTIMIZATION=ON `
            -DEVOLAB_BUILD_TESTS=OFF `
            -DEVOLAB_BUILD_BENCHMARKS=ON `
            -DEVOLAB_USE_TBB=OFF

      - name: Build
        run: |
          cmake --build build --config Release --parallel

      - name: Package (Linux)
        if: runner.os == 'Linux'
        run: |
          cd build
          cpack -G TGZ

      - name: Package (macOS)
        if: runner.os == 'macOS'
        run: |
          cd build
          cpack -G TGZ

      - name: Package (Windows)
        if: runner.os == 'Windows'
        run: |
          cd build
          cpack -G ZIP -C Release

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: evolab-${{ runner.os }}-${{ github.ref_name || inputs.version }}
          path: |
            build/apps/evolab_tsp*
            build/*.tar.gz
            build/*.zip

  create-release:
    name: Create Release
    needs: build-release
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v') || github.event_name == 'workflow_dispatch'

    steps:
      - uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts/

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name || inputs.version }}
          name: EvoLab ${{ github.ref_name || inputs.version }}
          draft: false
          prerelease: false
          generate_release_notes: true
          files: |
            artifacts/**/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
